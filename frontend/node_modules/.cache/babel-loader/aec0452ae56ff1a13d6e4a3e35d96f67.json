{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilos\\\\MERN-Blog-App\\\\frontend\\\\src\\\\components\\\\EditPost.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport sanitizeHtml from \"sanitize-html\";\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\n\nclass EditPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      body: \"\",\n      author: \"\",\n      date: \"\",\n      isLoggedIn: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(`${baseURL}/server/posts/${this.props.match.params.id}`).then(post => {\n      this.setState({\n        title: post.data.title,\n        body: post.data.body,\n        author: post.data.author,\n        date: post.data.date,\n        comments: post.data.comments\n      });\n    }).catch(err => console.error(err));\n\n    if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\n      this.setState({\n        isLoggedIn: true\n      });\n    }\n  }\n\n  handleEditorChange(event, editor) {\n    this.setState({\n      body: editor.getData()\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Display a spinner until the post is submitted\n\n    document.querySelector(\".spinner-container\").style.display = \"flexbox\";\n    const sanitizedData = sanitizeHtml(this.state.body);\n    this.setState({\n      body: sanitizedData\n    });\n    const editedPost = {\n      title: this.state.title,\n      author: this.state.author,\n      body: this.state.body,\n      date: this.state.date,\n      comments: this.state.comments\n    };\n    axios.post(`${baseURL}/server/posts/edit/${this.props.match.params.id}`, editedPost).then( // redirect to SHOW page\n    res => window.location = `/posts/${this.props.match.params.id}`).catch(err => console.error(err));\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-container\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, \"Loading...\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"edit-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"Edit Blog Post\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"full-stop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 43\n        }\n      }, \".\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"edit-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control edit-title\",\n        type: \"text\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CKEditor, {\n        editor: ClassicEditor,\n        data: this.state.body,\n        onChange: this.handleEditorChange,\n        config: {\n          toolbar: [\"Heading\", \"|\", \"Bold\", \"Italic\", \"Link\", \"NumberedList\", \"BulletedList\", \"|\", \"BlockQuote\", \"MediaEmbed\", \"Undo\", \"Redo\"]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit Post\",\n        className: \"btn btn-outline-primary btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        onClick: () => window.location = \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, \"You need to login to edit your post!\", /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        \"aria-label\": \"Close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        className: \"alert-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, \"\\xD7\", \" \")));\n    }\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["C:/Users/gilos/MERN-Blog-App/frontend/src/components/EditPost.js"],"names":["React","Component","axios","CKEditor","ClassicEditor","sanitizeHtml","baseURL","process","env","REACT_APP_BASEURL","EditPost","constructor","props","state","title","body","author","date","isLoggedIn","handleChange","bind","handleSubmit","handleEditorChange","componentDidMount","get","match","params","id","then","post","setState","data","comments","catch","err","console","error","sessionStorage","getItem","event","editor","getData","name","value","target","preventDefault","document","querySelector","style","display","sanitizedData","editedPost","res","window","location","render","toolbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\r\n\r\nclass EditPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            author: \"\",\r\n            date: \"\",\r\n            isLoggedIn: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(`${baseURL}/server/posts/${this.props.match.params.id}`)\r\n            .then((post) => {\r\n                this.setState({\r\n                    title: post.data.title,\r\n                    body: post.data.body,\r\n                    author: post.data.author,\r\n                    date: post.data.date,\r\n                    comments: post.data.comments,\r\n                });\r\n            })\r\n            .catch((err) => console.error(err));\r\n\r\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\r\n            this.setState({ isLoggedIn: true });\r\n        }\r\n    }\r\n\r\n    handleEditorChange(event, editor) {\r\n        this.setState({ body: editor.getData() });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Display a spinner until the post is submitted\r\n        document.querySelector(\".spinner-container\").style.display = \"flexbox\";\r\n\r\n        const sanitizedData = sanitizeHtml(this.state.body);\r\n        this.setState({ body: sanitizedData });\r\n\r\n        const editedPost = {\r\n            title: this.state.title,\r\n            author: this.state.author,\r\n            body: this.state.body,\r\n            date: this.state.date,\r\n            comments: this.state.comments,\r\n        };\r\n\r\n        axios\r\n            .post(\r\n                `${baseURL}/server/posts/edit/${this.props.match.params.id}`,\r\n                editedPost\r\n            )\r\n            .then(\r\n                // redirect to SHOW page\r\n                (res) =>\r\n                    (window.location = `/posts/${this.props.match.params.id}`)\r\n            )\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return (\r\n                <div>\r\n                    {/* A spinner to indicate loading until new post is submitted */}\r\n                    <div\r\n                        className=\"spinner-container\"\r\n                        style={{ display: \"none\" }}\r\n                    >\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"edit-post\">\r\n                        <h1>\r\n                            Edit Blog Post<span className=\"full-stop\">.</span>\r\n                        </h1>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"edit-title\">Title: </label>\r\n                                <input\r\n                                    className=\"form-control edit-title\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <CKEditor\r\n                                    editor={ClassicEditor}\r\n                                    data={this.state.body}\r\n                                    onChange={this.handleEditorChange}\r\n                                    config={{\r\n                                        toolbar: [\r\n                                            \"Heading\",\r\n                                            \"|\",\r\n                                            \"Bold\",\r\n                                            \"Italic\",\r\n                                            \"Link\",\r\n                                            \"NumberedList\",\r\n                                            \"BulletedList\",\r\n                                            \"|\",\r\n                                            \"BlockQuote\",\r\n                                            \"MediaEmbed\",\r\n                                            \"Undo\",\r\n                                            \"Redo\",\r\n                                        ],\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Submit Post\"\r\n                                    className=\"btn btn-outline-primary btn-lg\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"alert alert-warning\"\r\n                    role=\"alert\"\r\n                    onClick={() => (window.location = \"/login\")}\r\n                >\r\n                    You need to login to edit your post!\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <span aria-hidden=\"true\" className=\"alert-close\">\r\n                            &times;{\" \"}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default EditPost;\r\n"]},"metadata":{},"sourceType":"module"}